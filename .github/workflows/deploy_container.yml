name: Docker image build and publish
on:
  workflow_dispatch:
    inputs:
      instrument_name:
        description: 'Instrument name'
        required: true
        type: string

# concurrency required to avoid lock contention during ECR provisioning
concurrency: ci-${{ github.repository }}-${{ inputs.instrument_name }}-docker-pipeline

jobs:
  deploy_containers:
    runs-on: [ self-hosted, windows ]
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

#      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::449431850278:role/GitHubDeploy
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
         mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

#      - name: 'Login to GitHub Container Registry'
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{github.actor}}
#          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build, tag, and push docker image to GitHub Registry
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: imap_L3_processing
          IMAGE_TAG: latest-${{ inputs.instrument_name}}
#        run: |
#          docker build -t ghcr.io/pleasant-menlo/l3-data-processing-scratch:latest-${{ inputs.instrument_name}} -f Dockerfile .
#          docker push ghcr.io/pleasant-menlo/l3-data-processing-scratch:latest

        run: |
          docker build -t $REGISTRY/$REPOSITORY-repo:$IMAGE_TAG \
            --build-arg GIT_URL=${{ inputs.git_url }} \
            -f dockerfiles/Dockerfile.dev .
          docker push $REGISTRY/$REPOSITORY-repo:$IMAGE_TAG